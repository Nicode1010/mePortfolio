---
import GitHub from "./icons/GitHub.astro"
import HTML5 from "./icons/HTML5.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import NodeJs from "./icons/NodeJs.astro"
import SQLServer from "./icons/SQLServer.astro"

const TAGS = {
  NEXT: {
    name: "JavaScript",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "AWS",
    class: "bg-gray-100 text-black",
    icon: Tailwind,
  },
  NODEJS: {
    name: "NodeJs",
    class: "bg-gray-100 text-black",
    icon: NodeJs,
  },
  HTML5: {
    name: "HTML5",
    class: "bg-gray-100 text-black",
    icon: HTML5,
  },
  SQLSERVER: {
    name: "SQLServer",
    class: "bg-black text-white",
    icon: SQLServer,
  },
}
const PROJECTS = [
  {
    title: "API Serverless utilizando el framework AWS SAM para Manejo de Pedidos usando AWS DynamoDB y S3",
    description:
      "Este proyecto consiste en el desarrollo de una API serverless para la gestión de pedidos utilizando AWS Serverless Application Model (SAM). La aplicación aprovecha una arquitectura sin servidores para proporcionar una solución escalable y eficiente en la nube..",
    link: "https://svgl.vercel.app/",
    github: "https://github.com/Nicode1010/BACKEND--AWS---DYNAMODB---.git",
    image: "/projects/image.png",
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },
  {
    title: "Time Catcher: Optimización de Citas en Outlook 2024",
    description:
      "Time Capture es un pluggin desarrollado para Outlook 2024 que optimiza la gestión de citas al permitir a los usuarios integrar y organizar información relevante de manera eficiente. Este plugin utiliza JavaScript y la API de JavaScript de Office para interactuar con el cliente de Outlook, facilitando la captura y el manejo de datos de citas.",
    link: "https://TimeCapture.png",
    github: "https://github.com/Nicode1010/Pluggin-Outlook-TIME-CAPTURE.git",
    image: "/projects/TimeCapture.png",
    tags: [TAGS.NEXT, TAGS.NODEJS, TAGS.HTML5, TAGS.SQLSERVER],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



